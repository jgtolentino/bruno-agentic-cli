#!/bin/bash
# Claude Code CLI Secure Executor Wrapper
# Provides convenient commands for secure automation

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SECURE_EXECUTOR="$SCRIPT_DIR/secure_executor.js"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

show_help() {
    echo -e "${CYAN}Claude Code CLI Secure Executor${NC}"
    echo -e "${CYAN}================================${NC}"
    echo ""
    echo -e "${BLUE}Usage:${NC}"
    echo "  clodrep run <task-file>        Execute tasks from YAML file"
    echo "  clodrep test                   Run test tasks"
    echo "  clodrep init                   Initialize environment"
    echo "  clodrep secrets                Check loaded secrets"
    echo "  clodrep dry-run <task-file>    Show what would execute"
    echo ""
    echo -e "${BLUE}Options:${NC}"
    echo "  --verbose                      Enable verbose logging"
    echo "  --strict                       Require verification for all tasks"
    echo "  --env <file>                   Use custom env file"
    echo ""
    echo -e "${BLUE}Examples:${NC}"
    echo "  clodrep run sample-tasks.yaml --verbose"
    echo "  clodrep dry-run deploy-tasks.yaml"
    echo "  clodrep test --verbose"
    echo "  clodrep init"
    echo ""
    echo -e "${BLUE}Security Features:${NC}"
    echo "  üîê Automatic secret injection from .clodrep.env"
    echo "  üõ°Ô∏è Command sanitization in logs"
    echo "  ‚úÖ Mandatory verification for all operations"
    echo "  üì§ Intelligent delegation to Bruno for local tasks"
    echo ""
}

# Check if secure_executor.js exists
if [ ! -f "$SECURE_EXECUTOR" ]; then
    echo -e "${RED}‚ùå Secure executor not found: $SECURE_EXECUTOR${NC}"
    echo "Run 'clodrep init' to set up the environment"
    exit 1
fi

# Parse command
case "${1:-help}" in
    "run")
        if [ -z "$2" ]; then
            echo -e "${RED}‚ùå No task file specified${NC}"
            echo "Usage: clodrep run <task-file.yaml>"
            exit 1
        fi
        
        echo -e "${CYAN}üöÄ Executing tasks from: $2${NC}"
        shift  # Remove 'run' from args
        node "$SECURE_EXECUTOR" "$@"
        ;;
        
    "test")
        echo -e "${CYAN}üß™ Running test tasks${NC}"
        shift  # Remove 'test' from args
        node "$SECURE_EXECUTOR" "$SCRIPT_DIR/test-tasks.yaml" "$@"
        ;;
        
    "dry-run")
        if [ -z "$2" ]; then
            echo -e "${RED}‚ùå No task file specified${NC}"
            echo "Usage: clodrep dry-run <task-file.yaml>"
            exit 1
        fi
        
        echo -e "${CYAN}üèÉ Dry run mode - showing what would execute${NC}"
        shift  # Remove 'dry-run' from args
        node "$SECURE_EXECUTOR" "$@" --dry-run --verbose
        ;;
        
    "init")
        echo -e "${CYAN}üîß Initializing secure environment${NC}"
        node "$SECURE_EXECUTOR" --init
        ;;
        
    "secrets")
        echo -e "${CYAN}üîë Checking loaded secrets${NC}"
        node "$SECURE_EXECUTOR" --check-secrets
        ;;
        
    "sample")
        echo -e "${CYAN}üìã Running sample tasks${NC}"
        shift  # Remove 'sample' from args
        node "$SECURE_EXECUTOR" "$SCRIPT_DIR/sample-tasks.yaml" "$@"
        ;;
        
    "help"|"--help"|"-h")
        show_help
        ;;
        
    *)
        echo -e "${RED}‚ùå Unknown command: $1${NC}"
        echo ""
        show_help
        exit 1
        ;;
esac